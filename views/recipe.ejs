<style>
    /* General Styles */
    h1 {
        text-align: center;
        font-size: 2.8rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 20px;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
    }

    p {
        font-size: 1rem;
        color: #555;
    }

    a {
        color: #007bff;
        text-decoration: none;
        font-weight: bold;
        transition: color 0.3s;
    }


    /* Card Styling */
    .card {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin: 20px auto;
        max-width: 900px;
        overflow: hidden;
        transition: transform 0.3s;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
    }

    .recipe-image {
        width: 100%;
        max-width: 250px;
        height: auto;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 15px;
    }

    /* Row Layout */
    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .col-md-4 {
        flex: 1 1 30%;
        text-align: center;
    }

    .col-md-8 {
        flex: 1 1 65%;
    }

    h4 {
        margin-top: 20px;
        font-size: 1.5rem;
        font-weight: 600;
        color: #34495e;
        border-bottom: 2px solid #ecf0f1;
        padding-bottom: 5px;
    }

    ul {
        padding-left: 20px;
        margin-top: 10px;
    }

    ul li {
        margin-bottom: 5px;
        color: #7f8c8d;
        transition: color 0.3s;
    }

    ul li:hover {
        color: #2c3e50;
    }

    /* Button Styling */
    button {
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s;
    }

    button:hover {
        background-color: #218838;
        transform: translateY(-2px);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .row {
            flex-direction: column;
        }

        .col-md-4,
        .col-md-8 {
            flex: 1 1 100%;
        }
    }
</style>

<h1>Recipe</h1>
<% if (recipe !== null) { %>
<div class="card">
    <div class="row">
        <!-- Image Column -->
        <div class="col-md-4 text-center">
            <img src="/uploads/<%- recipe.image %>" alt="<%- recipe.name %>" class="recipe-image" loading="lazy">
        </div>
        
        <!-- Content Column -->
        <div class="col-md-8">
            <h1><%= recipe.name %></h1>
            <p><i class="bi bi-tag"></i> <%= recipe.category %></p>
            <p><i class="bi bi-tag"></i> <%= recipe.dietType %></p>
            <p><%= recipe.description %></p>

            <h4>Ingredients</h4>
            <ul>
                <% recipe.ingredients.forEach((ingredient) => { %>
                    <li><%= ingredient %></li>
                <% }); %>
            </ul>

            <h4>Cooking Instructions</h4>
            <p style="white-space: pre-line;"><%= recipe.instructions %></p>

            <a href="https://www.flipkart.com/grocery-supermart-store?marketplace=GROCERY" target="_blank">Buy Ingredients</a>
            
            <div>
                <button onclick="shareRecipeCard()">Share Recipe</button>
            </div>
        </div>
    </div>
</div>
<% } else { %>
<p>No Items Found</p>
<% } %>





<script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
<script>
    async function shareRecipeCard() {
        const cardElement = document.querySelector('.card'); // Select the recipe card

        // Adjust for better rendering
        try {
            const canvas = await html2canvas(cardElement, {
                scale: 2, // Increases resolution of the canvas
                width: cardElement.offsetWidth,
                height: cardElement.offsetHeight,
                backgroundColor: window.getComputedStyle(cardElement).backgroundColor, // Retain card's background
                allowTaint: true, // Ensures external images are rendered correctly
                useCORS: true // Allows cross-origin images
            });

            const dataUrl = canvas.toDataURL('image/png');

            // Convert to Blob
            const response = await fetch(dataUrl);
            const blob = await response.blob();
            const file = new File([blob], 'recipe.png', { type: 'image/png' });

            // Use Web Share API
            if (navigator.canShare && navigator.canShare({ files: [file] })) {
                await navigator.share({
                    title: "Check out this recipe!",
                    text: "Here's a recipe you might like.",
                    files: [file]
                });
                console.log("Recipe shared successfully!");
            } else {
                alert("Sharing not supported. Download image manually.");
            }
        } catch (error) {
            console.error("Error sharing recipe:", error);
            alert("Failed to share the recipe. Please try again.");
        }
    }
</script>
